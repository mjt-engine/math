{"version":3,"file":"lerp3.js","sourceRoot":"","sources":["../src/lerp3.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,GAAG,EAAE,MAAM,OAAO,CAAC;AAC5B,OAAO,EAAE,GAAG,EAAE,MAAM,OAAO,CAAC;AAC5B,OAAO,EAAE,GAAG,EAAE,MAAM,OAAO,CAAC;AAC5B,OAAO,EAAE,IAAI,EAAE,MAAM,QAAQ,CAAC;AAG9B,MAAM,CAAC,MAAM,KAAK,GAAG,CAAC,CAAS,EAAE,CAAS,EAAE,KAAa,EAAU,EAAE;IACnE,OAAO;QACL,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC;QAC3B,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC;QAC3B,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC;KAC5B,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { Point3 } from \"./type/Point\";\nimport { xOf } from \"./xOf\";\nimport { yOf } from \"./yOf\";\nimport { zOf } from \"./zOf\";\nimport { lerp } from \"./lerp\";\n\n\nexport const lerp3 = (a: Point3, b: Point3, alpha: number): Point3 => {\n  return [\n    lerp(xOf(a), xOf(b), alpha),\n    lerp(yOf(a), yOf(b), alpha),\n    lerp(zOf(a), zOf(b), alpha),\n  ];\n};\n"]}