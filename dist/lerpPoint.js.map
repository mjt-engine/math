{"version":3,"file":"lerpPoint.js","sourceRoot":"","sources":["../src/lerpPoint.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,YAAY,CAAC;AACtC,OAAO,EAAE,QAAQ,EAAE,MAAM,YAAY,CAAC;AACtC,OAAO,EAAE,QAAQ,EAAE,MAAM,YAAY,CAAC;AACtC,OAAO,EAAE,QAAQ,EAAE,MAAM,YAAY,CAAC;AACtC,OAAO,EAAE,QAAQ,EAAE,MAAM,YAAY,CAAC;AAEtC,OAAO,EAAE,KAAK,EAAE,MAAM,SAAS,CAAC;AAChC,OAAO,EAAE,KAAK,EAAE,MAAM,SAAS,CAAC;AAChC,OAAO,EAAE,KAAK,EAAE,MAAM,SAAS,CAAC;AAChC,OAAO,EAAE,KAAK,EAAE,MAAM,SAAS,CAAC;AAChC,OAAO,EAAE,KAAK,EAAE,MAAM,SAAS,CAAC;AAGhC,MAAM,CAAC,MAAM,SAAS,GAAG,CAAC,CAAQ,EAAE,CAAQ,EAAE,KAAa,EAAE,EAAE;IAC7D,IAAI,QAAQ,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC;QAC/B,OAAO,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;IAC5B,CAAC;IACD,IAAI,QAAQ,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC;QAC/B,OAAO,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;IAC5B,CAAC;IACD,IAAI,QAAQ,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC;QAC/B,OAAO,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;IAC5B,CAAC;IACD,IAAI,QAAQ,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC;QAC/B,OAAO,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;IAC5B,CAAC;IACD,IAAI,QAAQ,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC;QAC/B,OAAO,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;IAC5B,CAAC;IACD,OAAO,SAAS,CAAC;AACnB,CAAC,CAAC","sourcesContent":["import { isPoint0 } from \"./isPoint0\";\nimport { isPoint1 } from \"./isPoint1\";\nimport { isPoint2 } from \"./isPoint2\";\nimport { isPoint3 } from \"./isPoint3\";\nimport { isPoint4 } from \"./isPoint4\";\nimport { Point } from \"./type/Point\";\nimport { lerp4 } from \"./lerp4\";\nimport { lerp3 } from \"./lerp3\";\nimport { lerp2 } from \"./lerp2\";\nimport { lerp1 } from \"./lerp1\";\nimport { lerp0 } from \"./lerp0\";\n\n\nexport const lerpPoint = (a: Point, b: Point, alpha: number) => {\n  if (isPoint4(a) && isPoint4(b)) {\n    return lerp4(a, b, alpha);\n  }\n  if (isPoint3(a) && isPoint3(b)) {\n    return lerp3(a, b, alpha);\n  }\n  if (isPoint2(a) && isPoint2(b)) {\n    return lerp2(a, b, alpha);\n  }\n  if (isPoint1(a) && isPoint1(b)) {\n    return lerp1(a, b, alpha);\n  }\n  if (isPoint0(a) && isPoint0(b)) {\n    return lerp0(a, b, alpha);\n  }\n  return undefined;\n};\n"]}