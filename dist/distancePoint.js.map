{"version":3,"file":"distancePoint.js","sourceRoot":"","sources":["../src/distancePoint.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,YAAY,CAAC;AACtC,OAAO,EAAE,QAAQ,EAAE,MAAM,YAAY,CAAC;AACtC,OAAO,EAAE,QAAQ,EAAE,MAAM,YAAY,CAAC;AACtC,OAAO,EAAE,QAAQ,EAAE,MAAM,YAAY,CAAC;AACtC,OAAO,EAAE,QAAQ,EAAE,MAAM,YAAY,CAAC;AAEtC,OAAO,EAAE,SAAS,EAAE,MAAM,aAAa,CAAC;AACxC,OAAO,EAAE,SAAS,EAAE,MAAM,aAAa,CAAC;AACxC,OAAO,EAAE,SAAS,EAAE,MAAM,aAAa,CAAC;AACxC,OAAO,EAAE,SAAS,EAAE,MAAM,aAAa,CAAC;AACxC,OAAO,EAAE,SAAS,EAAE,MAAM,aAAa,CAAC;AAExC,MAAM,UAAU,aAAa,CAAC,CAAQ,EAAE,CAAQ;IAC9C,IAAI,QAAQ,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC;QAC/B,OAAO,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACzB,CAAC;IACD,IAAI,QAAQ,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC;QAC/B,OAAO,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACzB,CAAC;IACD,IAAI,QAAQ,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC;QAC/B,OAAO,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACzB,CAAC;IACD,IAAI,QAAQ,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC;QAC/B,OAAO,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACzB,CAAC;IACD,IAAI,QAAQ,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC;QAC/B,OAAO,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACzB,CAAC;IACD,MAAM,IAAI,KAAK,CAAC,wCAAwC,CAAC,CAAC;AAC5D,CAAC","sourcesContent":["import { isPoint0 } from \"./isPoint0\";\nimport { isPoint1 } from \"./isPoint1\";\nimport { isPoint2 } from \"./isPoint2\";\nimport { isPoint3 } from \"./isPoint3\";\nimport { isPoint4 } from \"./isPoint4\";\nimport { Point } from \"./type/Point\";\nimport { distance0 } from \"./distance0\";\nimport { distance1 } from \"./distance1\";\nimport { distance2 } from \"./distance2\";\nimport { distance3 } from \"./distance3\";\nimport { distance4 } from \"./distance4\";\n\nexport function distancePoint(a: Point, b: Point): number {\n  if (isPoint4(a) && isPoint4(b)) {\n    return distance4(a, b);\n  }\n  if (isPoint3(a) && isPoint3(b)) {\n    return distance3(a, b);\n  }\n  if (isPoint2(a) && isPoint2(b)) {\n    return distance2(a, b);\n  }\n  if (isPoint1(a) && isPoint1(b)) {\n    return distance1(a, b);\n  }\n  if (isPoint0(a) && isPoint0(b)) {\n    return distance0(a, b);\n  }\n  throw new Error(\"distancePoint: unsupported point types\");\n}\n"]}